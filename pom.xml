<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>Ultimates</name>

	<groupId>com.knoban</groupId>
	<artifactId>ultimates</artifactId>
	<version>0.1.2.0</version>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<repositories>
		<repository>
			<id>papermc</id>
			<url>https://papermc.io/repo/repository/maven-public/</url>
		</repository>
	</repositories>
	<dependencies>
		<!--
		To get this dependency to not have errors, please follow these instructions:
		1. For this to work, you will need a Java JDK and Maven installed on your machine with environmental variables
			set.
		2. Somewhere on your computer, clone https://github.com/PaperMC/Paper.
		3. Go into the cloned folder and run ./paper jar from bash. If you're on Windows, you may need to download Git
			from https://git-scm.com/downloads to be able to run the command from the Git prompt window. This command
			will build PaperSpigot on your computer and also drop some needed libraries into your .m2 folder.
		4. If you see errors in the script, chances are you did not set up your JDK or Maven environments correctly.
			Usually the most common errors are because of misconfiguration in environmental variables.
		5. When the script completes, reload this project and the errors should go away.

		https://papermc.io/forums/t/using-nms-in-paper/5710/5
		-->
		<dependency>
			<groupId>com.destroystokyo.paper</groupId>
			<artifactId>paper</artifactId>
			<version>1.16.4-R0.1-SNAPSHOT</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.knoban</groupId>
			<artifactId>atlas</artifactId>
			<version>0.1.0.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.jetbrains/annotations -->
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>16.0.1</version>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.5.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.5.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.4</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Used to generate git commit info and our git.properties file -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>4.0.0</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
				<configuration>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
				</configuration>
			</plugin>
			<!-- Generates an HTML Javadoc that developers can reference -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Used to run unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<printSummary>true</printSummary>
				</configuration>
			</plugin>
		</plugins>
		<!--Tell maven to enable resource filtering so we can use macros like '${project.version}' inside of our plugin.yml-->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>
</project>